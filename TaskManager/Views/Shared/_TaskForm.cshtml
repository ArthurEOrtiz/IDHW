@model TaskManager.ViewModels.TaskFormViewModel

@using(Html.BeginForm(Model.Action, "Tasks", FormMethod.Post, new {id = Model.FormId}))
{
  @Html.AntiForgeryToken() // generates an anti-forgery token to prevent cross-site request forgery attacks

  @Html.HiddenFor(model => model.Task.Id)

  <div class="form-group">
    @Html.LabelFor(model => model.Task.Title, htmlAttributes: new { @class = "control-label" })
    @Html.EditorFor(model => model.Task.Title, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Task.Title, "", new { @class = "text-danger" })
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Task.Description, htmlAttributes: new { @class = "control-label" })
    @Html.TextAreaFor(model => model.Task.Description, new { @class = "form-control", oninput = "updateCounter(this)"})
    @{
      var descriptionLength = Model.Task.Description?.Length ?? 0;
      var descriptionValidationMessage = $"{descriptionLength}/500";
    }
    @Html.ValidationMessageFor(model => model.Task.Description, descriptionValidationMessage)
  </div>

  <div class="form-group">
    @Html.LabelFor(model => model.Task.DueDate, htmlAttributes: new { @class = "control-label" })
    @Html.TextBoxFor(model => model.Task.DueDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date"})
    @Html.ValidationMessageFor(model => model.Task.DueDate, "", new { @class = "text-danger" })
  </div>

  <div class="form-group me-2">
    <input type="submit" value="Create" class="btn btn-primary" />
  </div>
}

